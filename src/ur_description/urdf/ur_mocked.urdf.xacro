<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">

  <xacro:arg name="name" default="ur"/>
  <xacro:arg name="ur_type" default="ur10e"/>

  <xacro:arg name="tf_prefix" default=""/>
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface"/>

  <xacro:arg name="mock_sensor_commands" default="false"/>
  <xacro:arg name="use_mock_hardware" default="false"/>

  <!-- include core URDF macros -->
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

  <xacro:include filename="$(find ur_description)/urdf/inc/ur_joint_control.xacro"/>
  <xacro:include filename="$(find ur_description)/urdf/inc/ur_transmissions.xacro"/>

  <xacro:include filename="$(find ur_description)/urdf/ros2_control_mock_hardware.xacro"/>

  <!-- create link fixed to the "world" -->
  <link name="world"/>

   <!-- arm -->
  <xacro:ur_robot
    name="$(arg name)"
    tf_prefix="$(arg tf_prefix)"
    parent="world"
    joint_limits_parameters_file="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"
    kinematics_parameters_file="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"
    physical_parameters_file="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"
    visual_parameters_file="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"
    safety_limits="false"
    safety_pos_margin="0.15"
    safety_k_position="20"
    force_abs_paths="false">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:ur_robot>

  <xacro:if value="$(arg use_mock_hardware)">
    <!-- Mock hardware plugin (no Gazebo bridge needed here) -->
    <xacro:ur_ros2_control
      name="$(arg name)"
      tf_prefix="$(arg tf_prefix)"
      mock_sensor_commands="$(arg mock_sensor_commands)"
      initial_positions="${xacro.load_yaml($(find ur_description)/config/initial_positions.yaml)}"/>
  </xacro:if>

  <xacro:unless value="$(arg use_mock_hardware)">
    <!-- Real/simulation hardware via gazebo_ros2_control -->
    <ros2_control name="$(arg name)_system" type="system">
      <hardware>
        <plugin>gazebo_ros2_control/RobotHWSim</plugin>
      </hardware>
      <xacro:ur_joint_control_description
        tf_prefix="$(arg tf_prefix)"
        initial_positions="${dict(shoulder_pan_joint=0.0,shoulder_lift_joint=-1.57,elbow_joint=0.0,wrist_1_joint=-1.57,wrist_2_joint=0.0,wrist_3_joint=0.0)}"/>
      <xacro:ur_arm_transmission
        prefix="$(arg tf_prefix)"
        hw_interface="$(arg transmission_hw_interface)"/>
    </ros2_control>
    <!-- Gazebo plugin to hook up ros2_control -->
    <gazebo>
      <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so"/>
    </gazebo>
  </xacro:unless>
</robot>
